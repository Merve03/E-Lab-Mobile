{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { usePress as $f6c31cce2adf654f$export$45712eceda6fad21 } from \"./usePress.mjs\";\nimport { useGlobalListeners as $4k2kv$useGlobalListeners, useDescription as $4k2kv$useDescription, mergeProps as $4k2kv$mergeProps } from \"@react-aria/utils\";\nimport { useRef as $4k2kv$useRef } from \"react\";\nvar $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;\nfunction $8a26561d2877236e$export$c24ed0104d07eab9(props) {\n  var isDisabled = props.isDisabled,\n    onLongPressStart = props.onLongPressStart,\n    onLongPressEnd = props.onLongPressEnd,\n    onLongPress = props.onLongPress,\n    _props$threshold = props.threshold,\n    threshold = _props$threshold === void 0 ? $8a26561d2877236e$var$DEFAULT_THRESHOLD : _props$threshold,\n    accessibilityDescription = props.accessibilityDescription;\n  var timeRef = (0, $4k2kv$useRef)(undefined);\n  var _ref = (0, $4k2kv$useGlobalListeners)(),\n    addGlobalListener = _ref.addGlobalListener,\n    removeGlobalListener = _ref.removeGlobalListener;\n  var _ref2 = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({\n      isDisabled: isDisabled,\n      onPressStart: function onPressStart(e) {\n        e.continuePropagation();\n        if (e.pointerType === 'mouse' || e.pointerType === 'touch') {\n          if (onLongPressStart) onLongPressStart(_objectSpread(_objectSpread({}, e), {}, {\n            type: 'longpressstart'\n          }));\n          timeRef.current = setTimeout(function () {\n            e.target.dispatchEvent(new PointerEvent('pointercancel', {\n              bubbles: true\n            }));\n            if (onLongPress) onLongPress(_objectSpread(_objectSpread({}, e), {}, {\n              type: 'longpress'\n            }));\n            timeRef.current = undefined;\n          }, threshold);\n          if (e.pointerType === 'touch') {\n            var onContextMenu = function onContextMenu(e) {\n              e.preventDefault();\n            };\n            addGlobalListener(e.target, 'contextmenu', onContextMenu, {\n              once: true\n            });\n            addGlobalListener(window, 'pointerup', function () {\n              setTimeout(function () {\n                removeGlobalListener(e.target, 'contextmenu', onContextMenu);\n              }, 30);\n            }, {\n              once: true\n            });\n          }\n        }\n      },\n      onPressEnd: function onPressEnd(e) {\n        if (timeRef.current) clearTimeout(timeRef.current);\n        if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) onLongPressEnd(_objectSpread(_objectSpread({}, e), {}, {\n          type: 'longpressend'\n        }));\n      }\n    }),\n    pressProps = _ref2.pressProps;\n  var descriptionProps = (0, $4k2kv$useDescription)(onLongPress && !isDisabled ? accessibilityDescription : undefined);\n  return {\n    longPressProps: (0, $4k2kv$mergeProps)(pressProps, descriptionProps)\n  };\n}\nexport { $8a26561d2877236e$export$c24ed0104d07eab9 as useLongPress };","map":{"version":3,"names":["$8a26561d2877236e$var$DEFAULT_THRESHOLD","$8a26561d2877236e$export$c24ed0104d07eab9","props","isDisabled","onLongPressStart","onLongPressEnd","onLongPress","_props$threshold","threshold","accessibilityDescription","timeRef","$4k2kv$useRef","undefined","_ref","$4k2kv$useGlobalListeners","addGlobalListener","removeGlobalListener","_ref2","$f6c31cce2adf654f$export$45712eceda6fad21","onPressStart","e","continuePropagation","pointerType","_objectSpread","type","current","setTimeout","target","dispatchEvent","PointerEvent","bubbles","onContextMenu","preventDefault","once","window","onPressEnd","clearTimeout","pressProps","descriptionProps","$4k2kv$useDescription","longPressProps","$4k2kv$mergeProps"],"sources":["C:\\Users\\merve\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useLongPress.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, LongPressEvent} from '@react-types/shared';\nimport {mergeProps, useDescription, useGlobalListeners} from '@react-aria/utils';\nimport {usePress} from './usePress';\nimport {useRef} from 'react';\n\nexport interface LongPressProps {\n  /** Whether long press events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when a long press interaction starts. */\n  onLongPressStart?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when a long press interaction ends, either\n   * over the target or when the pointer leaves the target.\n   */\n  onLongPressEnd?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when the threshold time is met while\n   * the press is over the target.\n   */\n  onLongPress?: (e: LongPressEvent) => void,\n  /**\n   * The amount of time in milliseconds to wait before triggering a long press.\n   * @default 500ms\n   */\n  threshold?: number,\n  /**\n   * A description for assistive techology users indicating that a long press\n   * action is available, e.g. \"Long press to open menu\".\n   */\n  accessibilityDescription?: string\n}\n\nexport interface LongPressResult {\n  /** Props to spread on the target element. */\n  longPressProps: DOMAttributes\n}\n\nconst DEFAULT_THRESHOLD = 500;\n\n/**\n * Handles long press interactions across mouse and touch devices. Supports a customizable time threshold,\n * accessibility description, and normalizes behavior across browsers and devices.\n */\nexport function useLongPress(props: LongPressProps): LongPressResult {\n  let {\n    isDisabled,\n    onLongPressStart,\n    onLongPressEnd,\n    onLongPress,\n    threshold = DEFAULT_THRESHOLD,\n    accessibilityDescription\n  } = props;\n\n  const timeRef = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let {pressProps} = usePress({\n    isDisabled,\n    onPressStart(e) {\n      e.continuePropagation();\n      if (e.pointerType === 'mouse' || e.pointerType === 'touch') {\n        if (onLongPressStart) {\n          onLongPressStart({\n            ...e,\n            type: 'longpressstart'\n          });\n        }\n\n        timeRef.current = setTimeout(() => {\n          // Prevent other usePress handlers from also handling this event.\n          e.target.dispatchEvent(new PointerEvent('pointercancel', {bubbles: true}));\n          if (onLongPress) {\n            onLongPress({\n              ...e,\n              type: 'longpress'\n            });\n          }\n          timeRef.current = undefined;\n        }, threshold);\n\n        // Prevent context menu, which may be opened on long press on touch devices\n        if (e.pointerType === 'touch') {\n          let onContextMenu = e => {\n            e.preventDefault();\n          };\n\n          addGlobalListener(e.target, 'contextmenu', onContextMenu, {once: true});\n          addGlobalListener(window, 'pointerup', () => {\n            // If no contextmenu event is fired quickly after pointerup, remove the handler\n            // so future context menu events outside a long press are not prevented.\n            setTimeout(() => {\n              removeGlobalListener(e.target, 'contextmenu', onContextMenu);\n            }, 30);\n          }, {once: true});\n        }\n      }\n    },\n    onPressEnd(e) {\n      if (timeRef.current) {\n        clearTimeout(timeRef.current);\n      }\n\n      if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) {\n        onLongPressEnd({\n          ...e,\n          type: 'longpressend'\n        });\n      }\n    }\n  });\n\n  let descriptionProps = useDescription(onLongPress && !isDisabled ? accessibilityDescription : undefined);\n\n  return {\n    longPressProps: mergeProps(pressProps, descriptionProps)\n  };\n}\n"],"mappings":";;;;;;AAiDA,IAAMA,uCAAA,GAAoB;AAMnB,SAASC,0CAAaC,KAAqB;EAChD,IACEC,UAAU,GAMRD,KAAA,CAPAC,UAAA;IAEFC,gBAAgB,GAKdF,KAAA,CANQE,gBAAA;IAEVC,cAAc,GAIZH,KAAA,CALcG,cAAA;IAEhBC,WAAW,GAGTJ,KAAA,CAJYI,WAAA;IAAAC,gBAAA,GAIZL,KAAA,CAHSM,SAAA;IACXA,SAAA,GAAAD,gBAAA,cAAYP,uCAAA,GAAAO,gBAAA;IACZE,wBAAwB,GACtBP,KAAA,CAFUO,wBAAA;EAId,IAAMC,OAAA,GAAU,IAAAC,aAAK,EAA6CC,SAAA;EAClE,IAAAC,IAAA,GAAgD,IAAAC,yBAAiB;IAA5DC,iBAAiB,GAAAF,IAAA,CAAlBE,iBAAA;IAAoBC,oBAAoB,GAAAH,IAAA,CAAtBG,oBAAA;EAEtB,IAAAC,KAAA,GAAmB,IAAAC,yCAAO,EAAE;kBAC1Bf,UAAA;MACAgB,YAAA,WAAAA,aAAaC,CAAC;QACZA,CAAA,CAAEC,mBAAmB;QACrB,IAAID,CAAA,CAAEE,WAAW,KAAK,WAAWF,CAAA,CAAEE,WAAW,KAAK,SAAS;UAC1D,IAAIlB,gBAAA,EACFA,gBAAA,CAAAmB,aAAA,CAAAA,aAAA,KACKH,CAAC;YACJI,IAAA,EAAM;UAAA,EACR;UAGFd,OAAA,CAAQe,OAAO,GAAGC,UAAA,CAAW;YAE3BN,CAAA,CAAEO,MAAM,CAACC,aAAa,CAAC,IAAIC,YAAA,CAAa,iBAAiB;cAACC,OAAA,EAAS;YAAI;YACvE,IAAIxB,WAAA,EACFA,WAAA,CAAAiB,aAAA,CAAAA,aAAA,KACKH,CAAC;cACJI,IAAA,EAAM;YAAA,EACR;YAEFd,OAAA,CAAQe,OAAO,GAAGb,SAAA;UACpB,GAAGJ,SAAA;UAGH,IAAIY,CAAA,CAAEE,WAAW,KAAK,SAAS;YAC7B,IAAIS,aAAA,GAAgB,SAAhBA,cAAgBX,CAAA;cAClBA,CAAA,CAAEY,cAAc;YAClB;YAEAjB,iBAAA,CAAkBK,CAAA,CAAEO,MAAM,EAAE,eAAeI,aAAA,EAAe;cAACE,IAAA,EAAM;YAAI;YACrElB,iBAAA,CAAkBmB,MAAA,EAAQ,aAAa;cAGrCR,UAAA,CAAW;gBACTV,oBAAA,CAAqBI,CAAA,CAAEO,MAAM,EAAE,eAAeI,aAAA;cAChD,GAAG;YACL,GAAG;cAACE,IAAA,EAAM;YAAI;UAChB;QACF;MACF;MACAE,UAAA,WAAAA,WAAWf,CAAC;QACV,IAAIV,OAAA,CAAQe,OAAO,EACjBW,YAAA,CAAa1B,OAAA,CAAQe,OAAO;QAG9B,IAAIpB,cAAA,KAAmBe,CAAA,CAAEE,WAAW,KAAK,WAAWF,CAAA,CAAEE,WAAW,KAAK,OAAM,GAC1EjB,cAAA,CAAAkB,aAAA,CAAAA,aAAA,KACKH,CAAC;UACJI,IAAA,EAAM;QAAA,EACR;MAEJ;IACF;IArDKa,UAAU,GAAApB,KAAA,CAAXoB,UAAA;EAuDJ,IAAIC,gBAAA,GAAmB,IAAAC,qBAAa,EAAEjC,WAAA,IAAe,CAACH,UAAA,GAAaM,wBAAA,GAA2BG,SAAA;EAE9F,OAAO;IACL4B,cAAA,EAAgB,IAAAC,iBAAS,EAAEJ,UAAA,EAAYC,gBAAA;EACzC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}