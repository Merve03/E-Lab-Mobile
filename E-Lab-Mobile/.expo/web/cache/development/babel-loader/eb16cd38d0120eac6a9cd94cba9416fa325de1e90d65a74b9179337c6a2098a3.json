{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { isFocusVisible as $isWE5$isFocusVisible, useFocusVisibleListener as $isWE5$useFocusVisibleListener, useFocus as $isWE5$useFocus, useFocusWithin as $isWE5$useFocusWithin } from \"@react-aria/interactions\";\nimport { useRef as $isWE5$useRef, useState as $isWE5$useState, useCallback as $isWE5$useCallback } from \"react\";\nfunction $f7dceffc5ad7768b$export$4e328f61c538687f() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    isTextInput = props.isTextInput,\n    within = props.within;\n  var state = (0, $isWE5$useRef)({\n    isFocused: false,\n    isFocusVisible: autoFocus || (0, $isWE5$isFocusVisible)()\n  });\n  var _ref = (0, $isWE5$useState)(false),\n    _ref2 = _slicedToArray(_ref, 2),\n    isFocused = _ref2[0],\n    setFocused = _ref2[1];\n  var _ref3 = (0, $isWE5$useState)(function () {\n      return state.current.isFocused && state.current.isFocusVisible;\n    }),\n    _ref4 = _slicedToArray(_ref3, 2),\n    isFocusVisibleState = _ref4[0],\n    setFocusVisible = _ref4[1];\n  var updateState = (0, $isWE5$useCallback)(function () {\n    return setFocusVisible(state.current.isFocused && state.current.isFocusVisible);\n  }, []);\n  var onFocusChange = (0, $isWE5$useCallback)(function (isFocused) {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n  (0, $isWE5$useFocusVisibleListener)(function (isFocusVisible) {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {\n    isTextInput: isTextInput\n  });\n  var _ref5 = (0, $isWE5$useFocus)({\n      isDisabled: within,\n      onFocusChange: onFocusChange\n    }),\n    focusProps = _ref5.focusProps;\n  var _ref6 = (0, $isWE5$useFocusWithin)({\n      isDisabled: !within,\n      onFocusWithinChange: onFocusChange\n    }),\n    focusWithinProps = _ref6.focusWithinProps;\n  return {\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\nexport { $f7dceffc5ad7768b$export$4e328f61c538687f as useFocusRing };","map":{"version":3,"names":["$f7dceffc5ad7768b$export$4e328f61c538687f","props","arguments","length","undefined","_props$autoFocus","autoFocus","isTextInput","within","state","$isWE5$useRef","isFocused","isFocusVisible","$isWE5$isFocusVisible","_ref","$isWE5$useState","_ref2","_slicedToArray","setFocused","_ref3","current","_ref4","isFocusVisibleState","setFocusVisible","updateState","$isWE5$useCallback","onFocusChange","$isWE5$useFocusVisibleListener","_ref5","$isWE5$useFocus","isDisabled","focusProps","_ref6","$isWE5$useFocusWithin","onFocusWithinChange","focusWithinProps"],"sources":["C:\\Users\\merve\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\useFocusRing.ts"],"sourcesContent":["import {DOMAttributes} from '@react-types/shared';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useCallback, useRef, useState} from 'react';\n\nexport interface AriaFocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: AriaFocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  });\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.current.isFocused && state.current.isFocusVisible);\n\n  let updateState = useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);\n\n  let onFocusChange = useCallback(isFocused => {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n"],"mappings":";;;AAoCO,SAASA,0CAAA,EAA2C;EAAA,IAA9BC,KAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA4B,CAAC,CAAC;EACzD,IAAAG,gBAAA,GAIIJ,KAAA,CAJAK,SAAA;IACFA,SAAA,GAAAD,gBAAA,cAAY,QAAAA,gBAAA;IACZE,WAAW,GAETN,KAAA,CAHUM,WAAA;IAEZC,MAAM,GACJP,KAAA,CAFSO,MAAA;EAGb,IAAIC,KAAA,GAAQ,IAAAC,aAAK,EAAE;IACjBC,SAAA,EAAW;IACXC,cAAA,EAAgBN,SAAA,IAAa,IAAAO,qBAAa;EAC5C;EACA,IAAAC,IAAA,GAA8B,IAAAC,eAAO,EAAE;IAAAC,KAAA,GAAAC,cAAA,CAAAH,IAAA;IAAlCH,SAAA,GAAAK,KAAA;IAAWE,UAAA,GAAAF,KAAA;EAChB,IAAAG,KAAA,GAA6C,IAAAJ,eAAO,EAAE;MAAA,OAAMN,KAAA,CAAMW,OAAO,CAACT,SAAS,IAAIF,KAAA,CAAMW,OAAO,CAACR,cAAc;IAAA;IAAAS,KAAA,GAAAJ,cAAA,CAAAE,KAAA;IAA9GG,mBAAA,GAAAD,KAAA;IAAqBE,eAAA,GAAAF,KAAA;EAE1B,IAAIG,WAAA,GAAc,IAAAC,kBAAU,EAAE;IAAA,OAAMF,eAAA,CAAgBd,KAAA,CAAMW,OAAO,CAACT,SAAS,IAAIF,KAAA,CAAMW,OAAO,CAACR,cAAc;EAAA,GAAG,EAAE;EAEhH,IAAIc,aAAA,GAAgB,IAAAD,kBAAU,EAAE,UAAAd,SAAA;IAC9BF,KAAA,CAAMW,OAAO,CAACT,SAAS,GAAGA,SAAA;IAC1BO,UAAA,CAAWP,SAAA;IACXa,WAAA;EACF,GAAG,CAACA,WAAA,CAAY;EAEhB,IAAAG,8BAAsB,EAAE,UAACf,cAAA;IACvBH,KAAA,CAAMW,OAAO,CAACR,cAAc,GAAGA,cAAA;IAC/BY,WAAA;EACF,GAAG,EAAE,EAAE;iBAACjB;EAAW;EAEnB,IAAAqB,KAAA,GAAmB,IAAAC,eAAO,EAAE;MAC1BC,UAAA,EAAYtB,MAAA;qBACZkB;IACF;IAHKK,UAAU,GAAAH,KAAA,CAAXG,UAAA;EAKJ,IAAAC,KAAA,GAAyB,IAAAC,qBAAa,EAAE;MACtCH,UAAA,EAAY,CAACtB,MAAA;MACb0B,mBAAA,EAAqBR;IACvB;IAHKS,gBAAgB,GAAAH,KAAA,CAAjBG,gBAAA;EAKJ,OAAO;eACLxB,SAAA;IACAC,cAAA,EAAgBU,mBAAA;IAChBS,UAAA,EAAYvB,MAAA,GAAS2B,gBAAA,GAAmBJ;EAC1C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}