{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useLayoutEffect as $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c } from \"./useLayoutEffect.mjs\";\nimport { useValueEffect as $1dbecbe27a04f9af$export$14d238f342723f25 } from \"./useValueEffect.mjs\";\nimport { useState as $eKkEp$useState, useRef as $eKkEp$useRef, useCallback as $eKkEp$useCallback, useEffect as $eKkEp$useEffect } from \"react\";\nimport { useSSRSafeId as $eKkEp$useSSRSafeId } from \"@react-aria/ssr\";\nvar $bdb11010cef70236$var$canUseDOM = Boolean(typeof window !== 'undefined' && window.document && window.document.createElement);\nvar $bdb11010cef70236$var$idsUpdaterMap = new Map();\nfunction $bdb11010cef70236$export$f680877a34711e37(defaultId) {\n  var _ref = (0, $eKkEp$useState)(defaultId),\n    _ref2 = _slicedToArray(_ref, 2),\n    value = _ref2[0],\n    setValue = _ref2[1];\n  var nextId = (0, $eKkEp$useRef)(null);\n  var res = (0, $eKkEp$useSSRSafeId)(value);\n  var updateValue = (0, $eKkEp$useCallback)(function (val) {\n    nextId.current = val;\n  }, []);\n  if ($bdb11010cef70236$var$canUseDOM) {\n    if ($bdb11010cef70236$var$idsUpdaterMap.has(res) && !$bdb11010cef70236$var$idsUpdaterMap.get(res).includes(updateValue)) $bdb11010cef70236$var$idsUpdaterMap.set(res, [].concat(_toConsumableArray($bdb11010cef70236$var$idsUpdaterMap.get(res)), [updateValue]));else $bdb11010cef70236$var$idsUpdaterMap.set(res, [updateValue]);\n  }\n  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(function () {\n    var r = res;\n    return function () {\n      $bdb11010cef70236$var$idsUpdaterMap.delete(r);\n    };\n  }, [res]);\n  (0, $eKkEp$useEffect)(function () {\n    var newId = nextId.current;\n    if (newId) {\n      nextId.current = null;\n      setValue(newId);\n    }\n  });\n  return res;\n}\nfunction $bdb11010cef70236$export$cd8c9cb68f842629(idA, idB) {\n  if (idA === idB) return idA;\n  var setIdsA = $bdb11010cef70236$var$idsUpdaterMap.get(idA);\n  if (setIdsA) {\n    setIdsA.forEach(function (fn) {\n      return fn(idB);\n    });\n    return idB;\n  }\n  var setIdsB = $bdb11010cef70236$var$idsUpdaterMap.get(idB);\n  if (setIdsB) {\n    setIdsB.forEach(function (fn) {\n      return fn(idA);\n    });\n    return idA;\n  }\n  return idB;\n}\nfunction $bdb11010cef70236$export$b4cc09c592e8fdb8() {\n  var depArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var id = $bdb11010cef70236$export$f680877a34711e37();\n  var _ref3 = (0, $1dbecbe27a04f9af$export$14d238f342723f25)(id),\n    _ref4 = _slicedToArray(_ref3, 2),\n    resolvedId = _ref4[0],\n    setResolvedId = _ref4[1];\n  var updateId = (0, $eKkEp$useCallback)(function () {\n    setResolvedId(function* () {\n      yield id;\n      yield document.getElementById(id) ? id : undefined;\n    });\n  }, [id, setResolvedId]);\n  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(updateId, [id, updateId].concat(_toConsumableArray(depArray)));\n  return resolvedId;\n}\nexport { $bdb11010cef70236$export$f680877a34711e37 as useId, $bdb11010cef70236$export$cd8c9cb68f842629 as mergeIds, $bdb11010cef70236$export$b4cc09c592e8fdb8 as useSlotId };","map":{"version":3,"names":["$bdb11010cef70236$var$canUseDOM","Boolean","window","document","createElement","$bdb11010cef70236$var$idsUpdaterMap","Map","$bdb11010cef70236$export$f680877a34711e37","defaultId","_ref","$eKkEp$useState","_ref2","_slicedToArray","value","setValue","nextId","$eKkEp$useRef","res","$eKkEp$useSSRSafeId","updateValue","$eKkEp$useCallback","val","current","has","get","includes","set","concat","_toConsumableArray","$f0a04ccd8dbdd83b$export$e5c5a5f917a5871c","r","delete","$eKkEp$useEffect","newId","$bdb11010cef70236$export$cd8c9cb68f842629","idA","idB","setIdsA","forEach","fn","setIdsB","$bdb11010cef70236$export$b4cc09c592e8fdb8","depArray","arguments","length","undefined","id","_ref3","$1dbecbe27a04f9af$export$14d238f342723f25","_ref4","resolvedId","setResolvedId","updateId","getElementById"],"sources":["C:\\Users\\merve\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\useId.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useEffect, useRef, useState} from 'react';\nimport {useLayoutEffect} from './useLayoutEffect';\nimport {useSSRSafeId} from '@react-aria/ssr';\nimport {useValueEffect} from './';\n\n// copied from SSRProvider.tsx to reduce exports, if needed again, consider sharing\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet idsUpdaterMap: Map<string, Array<(v: string) => void>> = new Map();\n\n/**\n * If a default is not provided, generate an id.\n * @param defaultId - Default component id.\n */\nexport function useId(defaultId?: string): string {\n  let [value, setValue] = useState(defaultId);\n  let nextId = useRef(null);\n\n  let res = useSSRSafeId(value);\n\n  let updateValue = useCallback((val) => {\n    nextId.current = val;\n  }, []);\n\n  if (canUseDOM) {\n    // TS not smart enough to know that `has` means the value exists\n    if (idsUpdaterMap.has(res) && !idsUpdaterMap.get(res)!.includes(updateValue)) {\n      idsUpdaterMap.set(res, [...idsUpdaterMap.get(res)!, updateValue]);\n    } else {\n      idsUpdaterMap.set(res, [updateValue]);\n    }\n  }\n\n  useLayoutEffect(() => {\n    let r = res;\n    return () => {\n      idsUpdaterMap.delete(r);\n    };\n  }, [res]);\n\n  // This cannot cause an infinite loop because the ref is updated first.\n  // eslint-disable-next-line\n  useEffect(() => {\n    let newId = nextId.current;\n    if (newId) {\n      nextId.current = null;\n      setValue(newId);\n    }\n  });\n\n  return res;\n}\n\n/**\n * Merges two ids.\n * Different ids will trigger a side-effect and re-render components hooked up with `useId`.\n */\nexport function mergeIds(idA: string, idB: string): string {\n  if (idA === idB) {\n    return idA;\n  }\n\n  let setIdsA = idsUpdaterMap.get(idA);\n  if (setIdsA) {\n    setIdsA.forEach(fn => fn(idB));\n    return idB;\n  }\n\n  let setIdsB = idsUpdaterMap.get(idB);\n  if (setIdsB) {\n    setIdsB.forEach(fn => fn(idA));\n    return idA;\n  }\n\n  return idB;\n}\n\n/**\n * Used to generate an id, and after render, check if that id is rendered so we know\n * if we can use it in places such as labelledby.\n * @param depArray - When to recalculate if the id is in the DOM.\n */\nexport function useSlotId(depArray: ReadonlyArray<any> = []): string {\n  let id = useId();\n  let [resolvedId, setResolvedId] = useValueEffect(id);\n  let updateId = useCallback(() => {\n    setResolvedId(function *() {\n      yield id;\n\n      yield document.getElementById(id) ? id : undefined;\n    });\n  }, [id, setResolvedId]);\n\n  useLayoutEffect(updateId, [id, updateId, ...depArray]);\n\n  return resolvedId;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}