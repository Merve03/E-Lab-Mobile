{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport $fzaAv$react from \"react\";\nvar $eb2240fc39a57fa5$export$bf788dd355e3a401 = function () {\n  function $eb2240fc39a57fa5$export$bf788dd355e3a401() {\n    _classCallCheck(this, $eb2240fc39a57fa5$export$bf788dd355e3a401);\n    this.cache = new WeakMap();\n  }\n  return _createClass($eb2240fc39a57fa5$export$bf788dd355e3a401, [{\n    key: \"build\",\n    value: function build(props, context) {\n      var _this = this;\n      this.context = context;\n      return $eb2240fc39a57fa5$var$iterable(function () {\n        return _this.iterateCollection(props);\n      });\n    }\n  }, {\n    key: \"iterateCollection\",\n    value: function* iterateCollection(props) {\n      var children = props.children,\n        items = props.items;\n      if ((0, $fzaAv$react).isValidElement(children) && children.type === (0, $fzaAv$react).Fragment) yield* this.iterateCollection({\n        children: children.props.children,\n        items: items\n      });else if (typeof children === 'function') {\n        if (!items) throw new Error('props.children was a function but props.items is missing');\n        var index = 0;\n        for (var item of items) {\n          yield* this.getFullNode({\n            value: item,\n            index: index\n          }, {\n            renderer: children\n          });\n          index++;\n        }\n      } else {\n        var _items = [];\n        (0, $fzaAv$react).Children.forEach(children, function (child) {\n          if (child) _items.push(child);\n        });\n        var _index = 0;\n        for (var _item of _items) {\n          var nodes = this.getFullNode({\n            element: _item,\n            index: _index\n          }, {});\n          for (var node of nodes) {\n            _index++;\n            yield node;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getKey\",\n    value: function getKey(item, partialNode, state, parentKey) {\n      if (item.key != null) return item.key;\n      if (partialNode.type === 'cell' && partialNode.key != null) return `${parentKey}${partialNode.key}`;\n      var v = partialNode.value;\n      if (v != null) {\n        var _v_key;\n        var key = (_v_key = v.key) !== null && _v_key !== void 0 ? _v_key : v.id;\n        if (key == null) throw new Error('No key found for item');\n        return key;\n      }\n      return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n    }\n  }, {\n    key: \"getChildState\",\n    value: function getChildState(state, partialNode) {\n      return {\n        renderer: partialNode.renderer || state.renderer\n      };\n    }\n  }, {\n    key: \"getFullNode\",\n    value: function* getFullNode(partialNode, state, parentKey, parentNode) {\n      if ((0, $fzaAv$react).isValidElement(partialNode.element) && partialNode.element.type === (0, $fzaAv$react).Fragment) {\n        var children = [];\n        (0, $fzaAv$react).Children.forEach(partialNode.element.props.children, function (child) {\n          children.push(child);\n        });\n        var _partialNode_index;\n        var index = (_partialNode_index = partialNode.index) !== null && _partialNode_index !== void 0 ? _partialNode_index : 0;\n        for (var child of children) yield* this.getFullNode({\n          element: child,\n          index: index++\n        }, state, parentKey, parentNode);\n        return;\n      }\n      var element = partialNode.element;\n      if (!element && partialNode.value && state && state.renderer) {\n        var cached = this.cache.get(partialNode.value);\n        if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n          cached.index = partialNode.index;\n          cached.parentKey = parentNode ? parentNode.key : null;\n          yield cached;\n          return;\n        }\n        element = state.renderer(partialNode.value);\n      }\n      if ((0, $fzaAv$react).isValidElement(element)) {\n        var type = element.type;\n        if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n          var name = element.type;\n          throw new Error(`Unknown element <${name}> in collection.`);\n        }\n        var childNodes = type.getCollectionNode(element.props, this.context);\n        var _partialNode_index1;\n        var _index2 = (_partialNode_index1 = partialNode.index) !== null && _partialNode_index1 !== void 0 ? _partialNode_index1 : 0;\n        var result = childNodes.next();\n        while (!result.done && result.value) {\n          var childNode = result.value;\n          partialNode.index = _index2;\n          var _childNode_key;\n          var nodeKey = (_childNode_key = childNode.key) !== null && _childNode_key !== void 0 ? _childNode_key : null;\n          if (nodeKey == null) nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);\n          var nodes = this.getFullNode(_objectSpread(_objectSpread({}, childNode), {}, {\n            key: nodeKey,\n            index: _index2,\n            wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)\n          }), this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n          var _children = _toConsumableArray(nodes);\n          for (var _node of _children) {\n            var _childNode_value, _ref;\n            _node.value = (_ref = (_childNode_value = childNode.value) !== null && _childNode_value !== void 0 ? _childNode_value : partialNode.value) !== null && _ref !== void 0 ? _ref : null;\n            if (_node.value) this.cache.set(_node.value, _node);\n            var _parentNode_type;\n            if (partialNode.type && _node.type !== partialNode.type) throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(_node.type)}> in <${$eb2240fc39a57fa5$var$capitalize((_parentNode_type = parentNode === null || parentNode === void 0 ? void 0 : parentNode.type) !== null && _parentNode_type !== void 0 ? _parentNode_type : 'unknown parent type')}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);\n            _index2++;\n            yield _node;\n          }\n          result = childNodes.next(_children);\n        }\n        return;\n      }\n      if (partialNode.key == null || partialNode.type == null) return;\n      var builder = this;\n      var _partialNode_value, _partialNode_textValue;\n      var node = {\n        type: partialNode.type,\n        props: partialNode.props,\n        key: partialNode.key,\n        parentKey: parentNode ? parentNode.key : null,\n        value: (_partialNode_value = partialNode.value) !== null && _partialNode_value !== void 0 ? _partialNode_value : null,\n        level: parentNode ? parentNode.level + 1 : 0,\n        index: partialNode.index,\n        rendered: partialNode.rendered,\n        textValue: (_partialNode_textValue = partialNode.textValue) !== null && _partialNode_textValue !== void 0 ? _partialNode_textValue : '',\n        'aria-label': partialNode['aria-label'],\n        wrapper: partialNode.wrapper,\n        shouldInvalidate: partialNode.shouldInvalidate,\n        hasChildNodes: partialNode.hasChildNodes || false,\n        childNodes: $eb2240fc39a57fa5$var$iterable(function* () {\n          if (!partialNode.hasChildNodes || !partialNode.childNodes) return;\n          var index = 0;\n          for (var _child of partialNode.childNodes()) {\n            if (_child.key != null) _child.key = `${node.key}${_child.key}`;\n            var _nodes = builder.getFullNode(_objectSpread(_objectSpread({}, _child), {}, {\n              index: index\n            }), builder.getChildState(state, _child), node.key, node);\n            for (var _node2 of _nodes) {\n              index++;\n              yield _node2;\n            }\n          }\n        })\n      };\n      yield node;\n    }\n  }]);\n}();\nfunction $eb2240fc39a57fa5$var$iterable(iterator) {\n  var cache = [];\n  var iterable = null;\n  return _defineProperty({}, Symbol.iterator, function* () {\n    for (var item of cache) yield item;\n    if (!iterable) iterable = iterator();\n    for (var _item2 of iterable) {\n      cache.push(_item2);\n      yield _item2;\n    }\n  });\n}\nfunction $eb2240fc39a57fa5$var$compose(outer, inner) {\n  if (outer && inner) return function (element) {\n    return outer(inner(element));\n  };\n  if (outer) return outer;\n  if (inner) return inner;\n}\nfunction $eb2240fc39a57fa5$var$capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nexport { $eb2240fc39a57fa5$export$bf788dd355e3a401 as CollectionBuilder };","map":{"version":3,"names":["$eb2240fc39a57fa5$export$bf788dd355e3a401","cache","WeakMap","build","props","context","_this","$eb2240fc39a57fa5$var$iterable","iterateCollection","key","value","children","items","$fzaAv$react","isValidElement","type","Fragment","Error","index","item","getFullNode","renderer","Children","forEach","child","push","nodes","element","node","getKey","partialNode","state","parentKey","v","_v_key","id","getChildState","parentNode","_partialNode_index","cached","get","shouldInvalidate","getCollectionNode","name","childNodes","_partialNode_index1","result","next","done","childNode","_childNode_key","nodeKey","_objectSpread","wrapper","$eb2240fc39a57fa5$var$compose","_toConsumableArray","_childNode_value","_ref","set","_parentNode_type","$eb2240fc39a57fa5$var$capitalize","builder","_partialNode_value","_partialNode_textValue","level","rendered","textValue","hasChildNodes","iterator","iterable","_defineProperty","Symbol","outer","inner","str","toUpperCase","slice"],"sources":["C:\\Users\\merve\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\CollectionBuilder.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBase, CollectionElement, Key, Node} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\n\ninterface CollectionBuilderState {\n  renderer?: (value: any) => ReactElement | null\n}\n\ninterface CollectReactElement<T> extends ReactElement {\n  getCollectionNode(props: any, context: any): Generator<PartialNode<T>, void, Node<T>[]>\n}\n\nexport class CollectionBuilder<T extends object> {\n  private context?: unknown;\n  private cache: WeakMap<T, Node<T>> = new WeakMap();\n\n  build(props: Partial<CollectionBase<T>>, context?: unknown) {\n    this.context = context;\n    return iterable(() => this.iterateCollection(props));\n  }\n\n  private *iterateCollection(props: Partial<CollectionBase<T>>): Generator<Node<T>> {\n    let {children, items} = props;\n\n    if (React.isValidElement<{children: CollectionElement<T>}>(children) && children.type === React.Fragment) {\n      yield* this.iterateCollection({\n        children: children.props.children,\n        items\n      });\n    } else if (typeof children === 'function') {\n      if (!items) {\n        throw new Error('props.children was a function but props.items is missing');\n      }\n\n      let index = 0;\n      for (let item of items) {\n        yield* this.getFullNode({\n          value: item,\n          index\n        }, {renderer: children});\n        index++;\n      }\n    } else {\n      let items: CollectionElement<T>[] = [];\n      React.Children.forEach(children, child => {\n        if (child) {\n          items.push(child);\n        }\n      });\n\n      let index = 0;\n      for (let item of items) {\n        let nodes = this.getFullNode({\n          element: item,\n          index: index\n        }, {});\n\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n\n  private getKey(item: NonNullable<CollectionElement<T>>, partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key | null): Key {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (partialNode.type === 'cell' && partialNode.key != null) {\n      return `${parentKey}${partialNode.key}`;\n    }\n\n    let v = partialNode.value as any;\n    if (v != null) {\n      let key = v.key ?? v.id;\n      if (key == null) {\n        throw new Error('No key found for item');\n      }\n\n      return key;\n    }\n\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n\n  private getChildState(state: CollectionBuilderState, partialNode: PartialNode<T>) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n\n  private *getFullNode(partialNode: PartialNode<T> & {index: number}, state: CollectionBuilderState, parentKey?: Key | null, parentNode?: Node<T>): Generator<Node<T>> {\n    if (React.isValidElement<{children: CollectionElement<T>}>(partialNode.element) && partialNode.element.type === React.Fragment) {\n      let children: CollectionElement<T>[] = [];\n\n      React.Children.forEach(partialNode.element.props.children, child => {\n        children.push(child);\n      });\n\n      let index = partialNode.index ?? 0;\n\n      for (const child of children) {\n        yield* this.getFullNode({\n          element: child,\n          index: index++\n        }, state, parentKey, parentNode);\n      }\n\n      return;\n    }\n\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        cached.parentKey = parentNode ? parentNode.key : null;\n        yield cached;\n        return;\n      }\n\n      element = state.renderer(partialNode.value);\n    }\n\n    // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n    if (React.isValidElement(element)) {\n      let type = element.type as unknown as CollectReactElement<T>;\n      if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n        let name = element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n\n      let childNodes = type.getCollectionNode(element.props, this.context) as Generator<PartialNode<T>, void, Node<T>[]>;\n      let index = partialNode.index ?? 0;\n      let result = childNodes.next();\n      while (!result.done && result.value) {\n        let childNode = result.value;\n\n        partialNode.index = index;\n\n        let nodeKey = childNode.key ?? null;\n        if (nodeKey == null) {\n          nodeKey = childNode.element ? null : this.getKey(element as NonNullable<CollectionElement<T>>, partialNode, state, parentKey);\n        }\n\n        let nodes = this.getFullNode({\n          ...childNode,\n          key: nodeKey,\n          index,\n          wrapper: compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n\n        let children = [...nodes];\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value ?? partialNode.value ?? null;\n          if (node.value) {\n            this.cache.set(node.value, node);\n          }\n\n          // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n          if (partialNode.type && node.type !== partialNode.type) {\n            throw new Error(`Unsupported type <${capitalize(node.type)}> in <${capitalize(parentNode?.type ?? 'unknown parent type')}>. Only <${capitalize(partialNode.type)}> is supported.`);\n          }\n\n          index++;\n          yield node;\n        }\n\n        result = childNodes.next(children);\n      }\n\n      return;\n    }\n\n    // Ignore invalid elements\n    if (partialNode.key == null || partialNode.type == null) {\n      return;\n    }\n\n    // Create full node\n    let builder = this;\n    let node: Node<T> = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value ?? null,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue ?? '',\n      'aria-label': partialNode['aria-label'],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes || false,\n      childNodes: iterable(function *() {\n        if (!partialNode.hasChildNodes || !partialNode.childNodes) {\n          return;\n        }\n\n        let index = 0;\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null) {\n            // TODO: Remove this line entirely and enforce that users always provide unique keys.\n            // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n            // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n            // children having a key of `abc`.\n            child.key = `${node.key}${child.key}`;\n          }\n\n          let nodes = builder.getFullNode({...child, index}, builder.getChildState(state, child), node.key, node);\n          for (let node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      })\n    };\n\n    yield node;\n  }\n}\n\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction iterable<T>(iterator: () => IterableIterator<Node<T>>): Iterable<Node<T>> {\n  let cache: Array<Node<T>> = [];\n  let iterable: null | IterableIterator<Node<T>> = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) {\n        yield item;\n      }\n\n      if (!iterable) {\n        iterable = iterator();\n      }\n\n      for (let item of iterable) {\n        cache.push(item);\n        yield item;\n      }\n    }\n  };\n}\n\ntype Wrapper = (element: ReactElement) => ReactElement;\nfunction compose(outer: Wrapper | void, inner: Wrapper | void): Wrapper | undefined {\n  if (outer && inner) {\n    return (element) => outer(inner(element));\n  }\n\n  if (outer) {\n    return outer;\n  }\n\n  if (inner) {\n    return inner;\n  }\n}\n\nfunction capitalize(str: string) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}