{"ast":null,"code":"import { useLocale as $18f2051aff69b9bf$export$43bb16f9c6d9e3f7 } from \"./context.mjs\";\nvar $325a3faab7a68acd$var$cache = new Map();\nfunction $325a3faab7a68acd$export$a16aca283550c30d(options) {\n  var _ref = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)(),\n    locale = _ref.locale;\n  var cacheKey = locale + (options ? Object.entries(options).sort(function (a, b) {\n    return a[0] < b[0] ? -1 : 1;\n  }).join() : '');\n  if ($325a3faab7a68acd$var$cache.has(cacheKey)) return $325a3faab7a68acd$var$cache.get(cacheKey);\n  var formatter = new Intl.Collator(locale, options);\n  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);\n  return formatter;\n}\nexport { $325a3faab7a68acd$export$a16aca283550c30d as useCollator };","map":{"version":3,"names":["$325a3faab7a68acd$var$cache","Map","$325a3faab7a68acd$export$a16aca283550c30d","options","_ref","$18f2051aff69b9bf$export$43bb16f9c6d9e3f7","locale","cacheKey","Object","entries","sort","a","b","join","has","get","formatter","Intl","Collator","set"],"sources":["C:\\Users\\merve\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useCollator.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\n\nlet cache = new Map<string, Intl.Collator>();\n\n/**\n * Provides localized string collation for the current locale. Automatically updates when the locale changes,\n * and handles caching of the collator for performance.\n * @param options - Collator options.\n */\nexport function useCollator(options?: Intl.CollatorOptions): Intl.Collator {\n  let {locale} = useLocale();\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey)!;\n  }\n\n  let formatter = new Intl.Collator(locale, options);\n  cache.set(cacheKey, formatter);\n  return formatter;\n}\n"],"mappings":";AAcA,IAAIA,2BAAA,GAAQ,IAAIC,GAAA;AAOT,SAASC,0CAAYC,OAA8B;EACxD,IAAAC,IAAA,GAAe,IAAAC,yCAAQ;IAAlBC,MAAM,GAAAF,IAAA,CAAPE,MAAA;EAEJ,IAAIC,QAAA,GAAWD,MAAA,IAAUH,OAAA,GAAUK,MAAA,CAAOC,OAAO,CAACN,OAAA,EAASO,IAAI,CAAC,UAACC,CAAA,EAAGC,CAAA;IAAA,OAAMD,CAAC,CAAC,EAAE,GAAGC,CAAC,CAAC,EAAE,GAAG,KAAK;EAAA,GAAGC,IAAI,KAAK,EAAC;EAC1G,IAAIb,2BAAA,CAAMc,GAAG,CAACP,QAAA,GACZ,OAAOP,2BAAA,CAAMe,GAAG,CAACR,QAAA;EAGnB,IAAIS,SAAA,GAAY,IAAIC,IAAA,CAAKC,QAAQ,CAACZ,MAAA,EAAQH,OAAA;EAC1CH,2BAAA,CAAMmB,GAAG,CAACZ,QAAA,EAAUS,SAAA;EACpB,OAAOA,SAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}