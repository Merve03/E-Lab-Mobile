{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef as $fUfeP$useRef, useState as $fUfeP$useState, useEffect as $fUfeP$useEffect } from \"react\";\nimport { useInteractionModality as $fUfeP$useInteractionModality } from \"@react-aria/interactions\";\nimport { useResizeObserver as $fUfeP$useResizeObserver } from \"@react-aria/utils\";\nvar $d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS = 2;\nvar $d275435c250248f8$var$THROTTLE_TIME = 50;\nvar $d275435c250248f8$var$TIMEOUT_TIME = 1000;\nvar $d275435c250248f8$var$ANGLE_PADDING = Math.PI / 12;\nfunction $d275435c250248f8$export$85ec83e04c95f50a(options) {\n  var menuRef = options.menuRef,\n    submenuRef = options.submenuRef,\n    isOpen = options.isOpen,\n    isDisabled = options.isDisabled;\n  var prevPointerPos = (0, $fUfeP$useRef)(undefined);\n  var submenuRect = (0, $fUfeP$useRef)(undefined);\n  var lastProcessedTime = (0, $fUfeP$useRef)(0);\n  var timeout = (0, $fUfeP$useRef)(undefined);\n  var autoCloseTimeout = (0, $fUfeP$useRef)(undefined);\n  var submenuSide = (0, $fUfeP$useRef)(undefined);\n  var movementsTowardsSubmenuCount = (0, $fUfeP$useRef)(2);\n  var _ref = (0, $fUfeP$useState)(false),\n    _ref2 = _slicedToArray(_ref, 2),\n    preventPointerEvents = _ref2[0],\n    setPreventPointerEvents = _ref2[1];\n  var updateSubmenuRect = function updateSubmenuRect() {\n    if (submenuRef.current) {\n      submenuRect.current = submenuRef.current.getBoundingClientRect();\n      submenuSide.current = undefined;\n    }\n  };\n  (0, $fUfeP$useResizeObserver)({\n    ref: submenuRef,\n    onResize: updateSubmenuRect\n  });\n  var reset = function reset() {\n    setPreventPointerEvents(false);\n    movementsTowardsSubmenuCount.current = $d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS;\n    prevPointerPos.current = undefined;\n  };\n  var modality = (0, $fUfeP$useInteractionModality)();\n  (0, $fUfeP$useEffect)(function () {\n    if (preventPointerEvents && menuRef.current) menuRef.current.style.pointerEvents = 'none';else menuRef.current.style.pointerEvents = '';\n  }, [menuRef, preventPointerEvents]);\n  (0, $fUfeP$useEffect)(function () {\n    var submenu = submenuRef.current;\n    var menu = menuRef.current;\n    if (isDisabled || !submenu || !isOpen || modality !== 'pointer' || !menu) {\n      reset();\n      return;\n    }\n    submenuRect.current = submenu.getBoundingClientRect();\n    var onPointerMove = function onPointerMove(e) {\n      if (e.pointerType === 'touch' || e.pointerType === 'pen') return;\n      var currentTime = Date.now();\n      if (currentTime - lastProcessedTime.current < $d275435c250248f8$var$THROTTLE_TIME) return;\n      clearTimeout(timeout.current);\n      clearTimeout(autoCloseTimeout.current);\n      var mouseX = e.clientX,\n        mouseY = e.clientY;\n      if (!prevPointerPos.current) {\n        prevPointerPos.current = {\n          x: mouseX,\n          y: mouseY\n        };\n        return;\n      }\n      if (!submenuRect.current) return;\n      if (!submenuSide.current) submenuSide.current = mouseX > submenuRect.current.right ? 'left' : 'right';\n      if (mouseX < menu.getBoundingClientRect().left || mouseX > menu.getBoundingClientRect().right || mouseY < menu.getBoundingClientRect().top || mouseY > menu.getBoundingClientRect().bottom) {\n        reset();\n        return;\n      }\n      var prevMouseX = prevPointerPos.current.x;\n      var prevMouseY = prevPointerPos.current.y;\n      var toSubmenuX = submenuSide.current === 'right' ? submenuRect.current.left - prevMouseX : prevMouseX - submenuRect.current.right;\n      var angleTop = Math.atan2(prevMouseY - submenuRect.current.top, toSubmenuX) + $d275435c250248f8$var$ANGLE_PADDING;\n      var angleBottom = Math.atan2(prevMouseY - submenuRect.current.bottom, toSubmenuX) - $d275435c250248f8$var$ANGLE_PADDING;\n      var anglePointer = Math.atan2(prevMouseY - mouseY, submenuSide.current === 'left' ? -(mouseX - prevMouseX) : mouseX - prevMouseX);\n      var isMovingTowardsSubmenu = anglePointer < angleTop && anglePointer > angleBottom;\n      movementsTowardsSubmenuCount.current = isMovingTowardsSubmenu ? Math.min(movementsTowardsSubmenuCount.current + 1, $d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS) : Math.max(movementsTowardsSubmenuCount.current - 1, 0);\n      if (movementsTowardsSubmenuCount.current >= $d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS) setPreventPointerEvents(true);else setPreventPointerEvents(false);\n      lastProcessedTime.current = currentTime;\n      prevPointerPos.current = {\n        x: mouseX,\n        y: mouseY\n      };\n      if (isMovingTowardsSubmenu) timeout.current = setTimeout(function () {\n        reset();\n        autoCloseTimeout.current = setTimeout(function () {\n          var target = document.elementFromPoint(mouseX, mouseY);\n          if (target && menu.contains(target)) target.dispatchEvent(new PointerEvent('pointerover', {\n            bubbles: true,\n            cancelable: true\n          }));\n        }, 100);\n      }, $d275435c250248f8$var$TIMEOUT_TIME);\n    };\n    window.addEventListener('pointermove', onPointerMove);\n    return function () {\n      window.removeEventListener('pointermove', onPointerMove);\n      clearTimeout(timeout.current);\n      clearTimeout(autoCloseTimeout.current);\n      movementsTowardsSubmenuCount.current = $d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS;\n    };\n  }, [isDisabled, isOpen, menuRef, modality, setPreventPointerEvents, submenuRef]);\n}\nexport { $d275435c250248f8$export$85ec83e04c95f50a as useSafelyMouseToSubmenu };","map":{"version":3,"names":["$d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS","$d275435c250248f8$var$THROTTLE_TIME","$d275435c250248f8$var$TIMEOUT_TIME","$d275435c250248f8$var$ANGLE_PADDING","Math","PI","$d275435c250248f8$export$85ec83e04c95f50a","options","menuRef","submenuRef","isOpen","isDisabled","prevPointerPos","$fUfeP$useRef","undefined","submenuRect","lastProcessedTime","timeout","autoCloseTimeout","submenuSide","movementsTowardsSubmenuCount","_ref","$fUfeP$useState","_ref2","_slicedToArray","preventPointerEvents","setPreventPointerEvents","updateSubmenuRect","current","getBoundingClientRect","$fUfeP$useResizeObserver","ref","onResize","reset","modality","$fUfeP$useInteractionModality","$fUfeP$useEffect","style","pointerEvents","submenu","menu","onPointerMove","e","pointerType","currentTime","Date","now","clearTimeout","mouseX","clientX","mouseY","clientY","x","y","right","left","top","bottom","prevMouseX","prevMouseY","toSubmenuX","angleTop","atan2","angleBottom","anglePointer","isMovingTowardsSubmenu","min","max","setTimeout","target","document","elementFromPoint","contains","dispatchEvent","PointerEvent","bubbles","cancelable","window","addEventListener","removeEventListener"],"sources":["C:\\Users\\merve\\node_modules\\@react-native-aria\\combobox\\node_modules\\@react-aria\\combobox\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\src\\useSafelyMouseToSubmenu.ts"],"sourcesContent":["\nimport {RefObject} from '@react-types/shared';\nimport {useEffect, useRef, useState} from 'react';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useResizeObserver} from '@react-aria/utils';\n\ninterface SafelyMouseToSubmenuOptions {\n  /** Ref for the parent menu. */\n  menuRef: RefObject<Element | null>,\n  /** Ref for the submenu. */\n  submenuRef: RefObject<Element | null>,\n  /** Whether the submenu is open. */\n  isOpen: boolean,\n  /** Whether this feature is disabled. */\n  isDisabled?: boolean\n}\n\nconst ALLOWED_INVALID_MOVEMENTS = 2;\nconst THROTTLE_TIME = 50;\nconst TIMEOUT_TIME = 1000;\nconst ANGLE_PADDING = Math.PI / 12; // 15Â°\n\n/**\n * Allows the user to move their pointer to the submenu without it closing when their mouse leaves the trigger element.\n * Prevents pointer events from going to the underlying menu if the user is moving their pointer towards the sub-menu.\n */\nexport function useSafelyMouseToSubmenu(options: SafelyMouseToSubmenuOptions) {\n  let {menuRef, submenuRef, isOpen, isDisabled} = options;\n  let prevPointerPos = useRef<{x: number, y: number} | undefined>(undefined);\n  let submenuRect = useRef<DOMRect | undefined>(undefined);\n  let lastProcessedTime = useRef<number>(0);\n  let timeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n  let autoCloseTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n  let submenuSide = useRef<'left' | 'right' | undefined>(undefined);\n  let movementsTowardsSubmenuCount = useRef<number>(2);\n  let [preventPointerEvents, setPreventPointerEvents] = useState(false);\n\n  let updateSubmenuRect = () => {\n    if (submenuRef.current) {\n      submenuRect.current = submenuRef.current.getBoundingClientRect();\n      submenuSide.current = undefined;\n    }\n  };\n  useResizeObserver({ref: submenuRef, onResize: updateSubmenuRect});\n\n  let reset = () => {\n    setPreventPointerEvents(false);\n    movementsTowardsSubmenuCount.current = ALLOWED_INVALID_MOVEMENTS;\n    prevPointerPos.current = undefined;\n  };\n\n  let modality = useInteractionModality();\n\n  useEffect(() => {\n    if (preventPointerEvents && menuRef.current) {\n      (menuRef.current as HTMLElement).style.pointerEvents = 'none';\n    } else {\n      (menuRef.current as HTMLElement).style.pointerEvents = '';\n    }\n  }, [menuRef, preventPointerEvents]);\n\n  useEffect(() => {\n    let submenu = submenuRef.current;\n    let menu = menuRef.current;\n\n    if (isDisabled || !submenu || !isOpen || modality !== 'pointer' || !menu) {\n      reset();\n      return;\n    }\n    submenuRect.current = submenu.getBoundingClientRect();\n\n    let onPointerMove = (e: PointerEvent) => {\n      if (e.pointerType === 'touch' || e.pointerType === 'pen') {\n        return;\n      }\n\n      let currentTime = Date.now();\n\n      // Throttle\n      if (currentTime - lastProcessedTime.current < THROTTLE_TIME) {\n        return;\n      }\n      clearTimeout(timeout.current);\n      clearTimeout(autoCloseTimeout.current);\n\n      let {clientX: mouseX, clientY: mouseY} = e;\n\n      if (!prevPointerPos.current) {\n        prevPointerPos.current = {x: mouseX, y: mouseY};\n        return;\n      }\n\n      if (!submenuRect.current) {\n        return;\n      }\n\n      if (!submenuSide.current) {\n        submenuSide.current = mouseX > submenuRect.current.right ? 'left' : 'right';\n      }\n\n      // Pointer is outside of parent menu\n      if (mouseX < menu.getBoundingClientRect().left || mouseX > menu.getBoundingClientRect().right || mouseY < menu.getBoundingClientRect().top || mouseY > menu.getBoundingClientRect().bottom) {\n        reset();\n        return;\n      }\n\n      /* Check if pointer is moving towards submenu.\n        Uses the 2-argument arctangent (https://en.wikipedia.org/wiki/Atan2) to calculate:\n          - angle between previous pointer and top of submenu\n          - angle between previous pointer and bottom of submenu\n          - angle between previous pointer and current pointer (delta)\n        If the pointer delta angle value is between the top and bottom angle values, we know the pointer is moving towards the submenu.\n      */\n      let prevMouseX = prevPointerPos.current.x;\n      let prevMouseY = prevPointerPos.current.y;\n      let toSubmenuX = submenuSide.current === 'right' ? submenuRect.current.left - prevMouseX : prevMouseX - submenuRect.current.right;\n      let angleTop = Math.atan2(prevMouseY - submenuRect.current.top, toSubmenuX) + ANGLE_PADDING;\n      let angleBottom = Math.atan2(prevMouseY - submenuRect.current.bottom, toSubmenuX) - ANGLE_PADDING;\n      let anglePointer = Math.atan2(prevMouseY - mouseY, (submenuSide.current === 'left' ? -(mouseX - prevMouseX) : mouseX - prevMouseX));\n      let isMovingTowardsSubmenu = anglePointer < angleTop && anglePointer > angleBottom;\n\n      movementsTowardsSubmenuCount.current = isMovingTowardsSubmenu ?\n        Math.min(movementsTowardsSubmenuCount.current + 1, ALLOWED_INVALID_MOVEMENTS) :\n        Math.max(movementsTowardsSubmenuCount.current - 1, 0);\n\n      if (movementsTowardsSubmenuCount.current >= ALLOWED_INVALID_MOVEMENTS) {\n        setPreventPointerEvents(true);\n      } else {\n        setPreventPointerEvents(false);\n      }\n\n      lastProcessedTime.current = currentTime;\n      prevPointerPos.current = {x: mouseX, y: mouseY};\n\n      // If the pointer is moving towards the submenu, start a timeout to close if no other movements are made after 500ms.\n      if (isMovingTowardsSubmenu) {\n        timeout.current = setTimeout(() => {\n          reset();\n          autoCloseTimeout.current = setTimeout(() => {\n            // Fire a pointerover event to trigger the menu to close.\n            // Wait until pointer-events:none is no longer applied\n            let target = document.elementFromPoint(mouseX, mouseY);\n            if (target && menu.contains(target)) {\n              target.dispatchEvent(new PointerEvent('pointerover', {bubbles: true, cancelable: true}));\n            }\n          }, 100);\n        }, TIMEOUT_TIME);\n      }\n    };\n\n    window.addEventListener('pointermove', onPointerMove);\n\n    return () => {\n      window.removeEventListener('pointermove', onPointerMove);\n      clearTimeout(timeout.current);\n      clearTimeout(autoCloseTimeout.current);\n      movementsTowardsSubmenuCount.current = ALLOWED_INVALID_MOVEMENTS;\n    };\n\n  }, [isDisabled, isOpen, menuRef, modality, setPreventPointerEvents, submenuRef]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}