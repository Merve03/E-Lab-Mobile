{"ast":null,"code":"import { useId as $83Elw$useId, useLabels as $83Elw$useLabels } from \"@react-aria/utils\";\nfunction $d191a55c9702f145$export$8467354a121f1b9f(props) {\n  var id = props.id,\n    label = props.label,\n    ariaLabelledby = props['aria-labelledby'],\n    ariaLabel = props['aria-label'],\n    _props$labelElementTy = props.labelElementType,\n    labelElementType = _props$labelElementTy === void 0 ? 'label' : _props$labelElementTy;\n  id = (0, $83Elw$useId)(id);\n  var labelId = (0, $83Elw$useId)();\n  var labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? `${labelId} ${ariaLabelledby}` : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === 'label' ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n  var fieldProps = (0, $83Elw$useLabels)({\n    id: id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  });\n  return {\n    labelProps: labelProps,\n    fieldProps: fieldProps\n  };\n}\nexport { $d191a55c9702f145$export$8467354a121f1b9f as useLabel };","map":{"version":3,"names":["$d191a55c9702f145$export$8467354a121f1b9f","props","id","label","ariaLabelledby","ariaLabel","_props$labelElementTy","labelElementType","$83Elw$useId","labelId","labelProps","htmlFor","undefined","console","warn","fieldProps","$83Elw$useLabels"],"sources":["C:\\Users\\merve\\node_modules\\@react-aria\\label\\dist\\packages\\@react-aria\\label\\src\\useLabel.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, LabelableProps} from '@react-types/shared';\nimport {ElementType, LabelHTMLAttributes} from 'react';\nimport {useId, useLabels} from '@react-aria/utils';\n\nexport interface LabelAriaProps extends LabelableProps, DOMProps, AriaLabelingProps {\n  /**\n   * The HTML element used to render the label, e.g. 'label', or 'span'.\n   * @default 'label'\n   */\n  labelElementType?: ElementType\n}\n\nexport interface LabelAria {\n  /** Props to apply to the label container element. */\n  labelProps: DOMAttributes | LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props to apply to the field container element being labeled. */\n  fieldProps: AriaLabelingProps & DOMProps\n}\n\n/**\n * Provides the accessibility implementation for labels and their associated elements.\n * Labels provide context for user inputs.\n * @param props - The props for labels and fields.\n */\nexport function useLabel(props: LabelAriaProps): LabelAria {\n  let {\n    id,\n    label,\n    'aria-labelledby': ariaLabelledby,\n    'aria-label': ariaLabel,\n    labelElementType = 'label'\n  } = props;\n\n  id = useId(id);\n  let labelId = useId();\n  let labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? `${labelId} ${ariaLabelledby}` : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === 'label' ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) {\n    console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n  }\n\n  let fieldProps = useLabels({\n    id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  });\n\n  return {\n    labelProps,\n    fieldProps\n  };\n}\n"],"mappings":";AAoCO,SAASA,0CAASC,KAAqB;EAC5C,IACEC,EAAE,GAKAD,KAAA,CANAC,EAAA;IAEFC,KAAK,GAIHF,KAAA,CALAE,KAAA;IAEiBC,cAAc,GAG/BH,KAAA,CAHF;IACcI,SAAS,GAErBJ,KAAA,CAFF;IAAAK,qBAAA,GAEEL,KAAA,CAFqBM,gBAAA;IACvBA,gBAAA,GAAAD,qBAAA,cAAmB,UAAAA,qBAAA;EAGrBJ,EAAA,GAAK,IAAAM,YAAI,EAAEN,EAAA;EACX,IAAIO,OAAA,GAAU,IAAAD,YAAI;EAClB,IAAIE,UAAA,GAAa,CAAC;EAClB,IAAIP,KAAA,EAAO;IACTC,cAAA,GAAiBA,cAAA,GAAiB,GAAGK,OAAA,IAAWL,cAAA,EAAgB,GAAGK,OAAA;IACnEC,UAAA,GAAa;MACXR,EAAA,EAAIO,OAAA;MACJE,OAAA,EAASJ,gBAAA,KAAqB,UAAUL,EAAA,GAAKU;IAC/C;EACF,OAAO,IAAI,CAACR,cAAA,IAAkB,CAACC,SAAA,EAC7BQ,OAAA,CAAQC,IAAI,CAAC;EAGf,IAAIC,UAAA,GAAa,IAAAC,gBAAQ,EAAE;QACzBd,EAAA;IACA,cAAcG,SAAA;IACd,mBAAmBD;EACrB;EAEA,OAAO;gBACLM,UAAA;gBACAK;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}