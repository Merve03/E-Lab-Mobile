{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"portalContainer\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport $4AOtR$react, { useContext as $4AOtR$useContext, useState as $4AOtR$useState, useMemo as $4AOtR$useMemo, useEffect as $4AOtR$useEffect } from \"react\";\nimport $4AOtR$reactdom from \"react-dom\";\nimport { useIsSSR as $4AOtR$useIsSSR } from \"@react-aria/ssr\";\nvar $f57aed4a881a3485$var$Context = (0, $4AOtR$react).createContext(null);\nfunction $f57aed4a881a3485$export$178405afcd8c5eb(props) {\n  var children = props.children;\n  var parent = (0, $4AOtR$useContext)($f57aed4a881a3485$var$Context);\n  var _ref = (0, $4AOtR$useState)(0),\n    _ref2 = _slicedToArray(_ref, 2),\n    modalCount = _ref2[0],\n    setModalCount = _ref2[1];\n  var context = (0, $4AOtR$useMemo)(function () {\n    return {\n      parent: parent,\n      modalCount: modalCount,\n      addModal: function addModal() {\n        setModalCount(function (count) {\n          return count + 1;\n        });\n        if (parent) parent.addModal();\n      },\n      removeModal: function removeModal() {\n        setModalCount(function (count) {\n          return count - 1;\n        });\n        if (parent) parent.removeModal();\n      }\n    };\n  }, [parent, modalCount]);\n  return (0, $4AOtR$react).createElement($f57aed4a881a3485$var$Context.Provider, {\n    value: context\n  }, children);\n}\nfunction $f57aed4a881a3485$export$d9aaed4c3ece1bc0() {\n  var context = (0, $4AOtR$useContext)($f57aed4a881a3485$var$Context);\n  return {\n    modalProviderProps: {\n      'aria-hidden': context && context.modalCount > 0 ? true : undefined\n    }\n  };\n}\nfunction $f57aed4a881a3485$var$OverlayContainerDOM(props) {\n  var _$f57aed4a881a3485$ex = $f57aed4a881a3485$export$d9aaed4c3ece1bc0(),\n    modalProviderProps = _$f57aed4a881a3485$ex.modalProviderProps;\n  return (0, $4AOtR$react).createElement(\"div\", _objectSpread(_objectSpread({\n    \"data-overlay-container\": true\n  }, props), modalProviderProps));\n}\nfunction $f57aed4a881a3485$export$bf688221f59024e5(props) {\n  return (0, $4AOtR$react).createElement($f57aed4a881a3485$export$178405afcd8c5eb, null, (0, $4AOtR$react).createElement($f57aed4a881a3485$var$OverlayContainerDOM, props));\n}\nfunction $f57aed4a881a3485$export$b47c3594eab58386(props) {\n  var isSSR = (0, $4AOtR$useIsSSR)();\n  var _props$portalContaine = props.portalContainer,\n    portalContainer = _props$portalContaine === void 0 ? isSSR ? null : document.body : _props$portalContaine,\n    rest = _objectWithoutProperties(props, _excluded);\n  (0, $4AOtR$react).useEffect(function () {\n    if (portalContainer === null || portalContainer === void 0 ? void 0 : portalContainer.closest('[data-overlay-container]')) throw new Error('An OverlayContainer must not be inside another container. Please change the portalContainer prop.');\n  }, [portalContainer]);\n  if (!portalContainer) return null;\n  var contents = (0, $4AOtR$react).createElement($f57aed4a881a3485$export$bf688221f59024e5, rest);\n  return (0, $4AOtR$reactdom).createPortal(contents, portalContainer);\n}\nfunction $f57aed4a881a3485$export$33ffd74ebf07f060(options) {\n  var context = (0, $4AOtR$useContext)($f57aed4a881a3485$var$Context);\n  if (!context) throw new Error('Modal is not contained within a provider');\n  (0, $4AOtR$useEffect)(function () {\n    if ((options === null || options === void 0 ? void 0 : options.isDisabled) || !context || !context.parent) return;\n    context.parent.addModal();\n    return function () {\n      if (context && context.parent) context.parent.removeModal();\n    };\n  }, [context, context.parent, options === null || options === void 0 ? void 0 : options.isDisabled]);\n  return {\n    modalProps: {\n      'data-ismodal': !(options === null || options === void 0 ? void 0 : options.isDisabled)\n    }\n  };\n}\nexport { $f57aed4a881a3485$export$178405afcd8c5eb as ModalProvider, $f57aed4a881a3485$export$d9aaed4c3ece1bc0 as useModalProvider, $f57aed4a881a3485$export$bf688221f59024e5 as OverlayProvider, $f57aed4a881a3485$export$b47c3594eab58386 as OverlayContainer, $f57aed4a881a3485$export$33ffd74ebf07f060 as useModal };","map":{"version":3,"names":["$f57aed4a881a3485$var$Context","$4AOtR$react","createContext","$f57aed4a881a3485$export$178405afcd8c5eb","props","children","parent","$4AOtR$useContext","_ref","$4AOtR$useState","_ref2","_slicedToArray","modalCount","setModalCount","context","$4AOtR$useMemo","addModal","count","removeModal","createElement","Provider","value","$f57aed4a881a3485$export$d9aaed4c3ece1bc0","modalProviderProps","undefined","$f57aed4a881a3485$var$OverlayContainerDOM","_$f57aed4a881a3485$ex","_objectSpread","$f57aed4a881a3485$export$bf688221f59024e5","$f57aed4a881a3485$export$b47c3594eab58386","isSSR","$4AOtR$useIsSSR","_props$portalContaine","portalContainer","document","body","rest","_objectWithoutProperties","_excluded","useEffect","closest","Error","contents","$4AOtR$reactdom","createPortal","$f57aed4a881a3485$export$33ffd74ebf07f060","options","$4AOtR$useEffect","isDisabled","modalProps"],"sources":["C:\\Users\\merve\\node_modules\\@react-aria\\overlays\\dist\\packages\\@react-aria\\overlays\\src\\useModal.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport React, {AriaAttributes, ReactNode, useContext, useEffect, useMemo, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface ModalProviderProps extends DOMAttributes {\n  children: ReactNode\n}\n\ninterface ModalContext {\n  parent: ModalContext | null,\n  modalCount: number,\n  addModal: () => void,\n  removeModal: () => void\n}\n\nconst Context = React.createContext<ModalContext | null>(null);\n\n/**\n * Each ModalProvider tracks how many modals are open in its subtree. On mount, the modals\n * trigger `addModal` to increment the count, and trigger `removeModal` on unmount to decrement it.\n * This is done recursively so that all parent providers are incremented and decremented.\n * If the modal count is greater than zero, we add `aria-hidden` to this provider to hide its\n * subtree from screen readers. This is done using React context in order to account for things\n * like portals, which can cause the React tree and the DOM tree to differ significantly in structure.\n */\nexport function ModalProvider(props: ModalProviderProps) {\n  let {children} = props;\n  let parent = useContext(Context);\n  let [modalCount, setModalCount] = useState(0);\n  let context = useMemo(() => ({\n    parent,\n    modalCount,\n    addModal() {\n      setModalCount(count => count + 1);\n      if (parent) {\n        parent.addModal();\n      }\n    },\n    removeModal() {\n      setModalCount(count => count - 1);\n      if (parent) {\n        parent.removeModal();\n      }\n    }\n  }), [parent, modalCount]);\n\n  return (\n    <Context.Provider value={context}>\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport interface ModalProviderAria {\n  /**\n   * Props to be spread on the container element.\n   */\n  modalProviderProps: AriaAttributes\n}\n\n/**\n * Used to determine if the tree should be aria-hidden based on how many\n * modals are open.\n */\nexport function useModalProvider(): ModalProviderAria {\n  let context = useContext(Context);\n  return {\n    modalProviderProps: {\n      'aria-hidden': context && context.modalCount > 0 ? true : undefined\n    }\n  };\n}\n\n/**\n * Creates a root node that will be aria-hidden if there are other modals open.\n */\nfunction OverlayContainerDOM(props: ModalProviderProps) {\n  let {modalProviderProps} = useModalProvider();\n  return <div data-overlay-container {...props} {...modalProviderProps} />;\n}\n\n/**\n * An OverlayProvider acts as a container for the top-level application.\n * Any application that uses modal dialogs or other overlays should\n * be wrapped in a `<OverlayProvider>`. This is used to ensure that\n * the main content of the application is hidden from screen readers\n * if a modal or other overlay is opened. Only the top-most modal or\n * overlay should be accessible at once.\n */\nexport function OverlayProvider(props: ModalProviderProps) {\n  return (\n    <ModalProvider>\n      <OverlayContainerDOM {...props} />\n    </ModalProvider>\n  );\n}\n\nexport interface OverlayContainerProps extends ModalProviderProps {\n  /**\n   * The container element in which the overlay portal will be placed.\n   * @default document.body\n   */\n  portalContainer?: Element\n}\n\n/**\n * A container for overlays like modals and popovers. Renders the overlay\n * into a Portal which is placed at the end of the document body.\n * Also ensures that the overlay is hidden from screen readers if a\n * nested modal is opened. Only the top-most modal or overlay should\n * be accessible at once.\n */\nexport function OverlayContainer(props: OverlayContainerProps): React.ReactPortal | null {\n  let isSSR = useIsSSR();\n  let {portalContainer = isSSR ? null : document.body, ...rest} = props;\n\n  React.useEffect(() => {\n    if (portalContainer?.closest('[data-overlay-container]')) {\n      throw new Error('An OverlayContainer must not be inside another container. Please change the portalContainer prop.');\n    }\n  }, [portalContainer]);\n\n  if (!portalContainer) {\n    return null;\n  }\n\n  let contents = <OverlayProvider {...rest} />;\n  return ReactDOM.createPortal(contents, portalContainer);\n}\n\ninterface ModalAriaProps extends DOMAttributes {\n  /** Data attribute marks the dom node as a modal for the aria-modal-polyfill. */\n  'data-ismodal': boolean\n}\n\nexport interface AriaModalOptions {\n  isDisabled?: boolean\n}\n\nexport interface ModalAria {\n  /** Props for the modal content element. */\n  modalProps: ModalAriaProps\n}\n\n/**\n * Hides content outside the current `<OverlayContainer>` from screen readers\n * on mount and restores it on unmount. Typically used by modal dialogs and\n * other types of overlays to ensure that only the top-most modal is\n * accessible at once.\n */\nexport function useModal(options?: AriaModalOptions): ModalAria {\n  // Add aria-hidden to all parent providers on mount, and restore on unmount.\n  let context = useContext(Context);\n  if (!context) {\n    throw new Error('Modal is not contained within a provider');\n  }\n\n  useEffect(() => {\n    if (options?.isDisabled || !context || !context.parent) {\n      return;\n    }\n\n    // The immediate context is from the provider containing this modal, so we only\n    // want to trigger aria-hidden on its parents not on the modal provider itself.\n    context.parent.addModal();\n    return () => {\n      if (context && context.parent) {\n        context.parent.removeModal();\n      }\n    };\n  }, [context, context.parent, options?.isDisabled]);\n\n  return {\n    modalProps: {\n      'data-ismodal': !options?.isDisabled\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}