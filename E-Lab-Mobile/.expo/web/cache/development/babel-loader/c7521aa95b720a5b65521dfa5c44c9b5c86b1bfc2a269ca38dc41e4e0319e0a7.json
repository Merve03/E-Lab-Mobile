{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { radioGroupData as $884aeceb3d67f00f$export$37b65e5b5444d35c } from \"./utils.mjs\";\nimport { mergeProps as $5jJ3f$mergeProps, filterDOMProps as $5jJ3f$filterDOMProps, useFormReset as $5jJ3f$useFormReset } from \"@react-aria/utils\";\nimport { useFocusable as $5jJ3f$useFocusable } from \"@react-aria/focus\";\nimport { useFormValidation as $5jJ3f$useFormValidation } from \"@react-aria/form\";\nimport { usePress as $5jJ3f$usePress } from \"@react-aria/interactions\";\nfunction $0d5c49892c1215da$export$37b0961d2f4751e2(props, state, ref) {\n  var value = props.value,\n    children = props.children,\n    ariaLabel = props['aria-label'],\n    ariaLabelledby = props['aria-labelledby'];\n  var isDisabled = props.isDisabled || state.isDisabled;\n  var hasChildren = children != null;\n  var hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  var checked = state.selectedValue === value;\n  var onChange = function onChange(e) {\n    e.stopPropagation();\n    state.setSelectedValue(value);\n  };\n  var _ref = (0, $5jJ3f$usePress)({\n      isDisabled: isDisabled\n    }),\n    pressProps = _ref.pressProps,\n    isPressed = _ref.isPressed;\n  var _ref2 = (0, $5jJ3f$usePress)({\n      isDisabled: isDisabled,\n      onPress: function onPress() {\n        state.setSelectedValue(value);\n      }\n    }),\n    labelProps = _ref2.pressProps,\n    isLabelPressed = _ref2.isPressed;\n  var _ref3 = (0, $5jJ3f$useFocusable)((0, $5jJ3f$mergeProps)(props, {\n      onFocus: function onFocus() {\n        return state.setLastFocusedValue(value);\n      }\n    }), ref),\n    focusableProps = _ref3.focusableProps;\n  var interactions = (0, $5jJ3f$mergeProps)(pressProps, focusableProps);\n  var domProps = (0, $5jJ3f$filterDOMProps)(props, {\n    labelable: true\n  });\n  var tabIndex = -1;\n  if (state.selectedValue != null) {\n    if (state.selectedValue === value) tabIndex = 0;\n  } else if (state.lastFocusedValue === value || state.lastFocusedValue == null) tabIndex = 0;\n  if (isDisabled) tabIndex = undefined;\n  var _get = (0, $884aeceb3d67f00f$export$37b65e5b5444d35c).get(state),\n    name = _get.name,\n    descriptionId = _get.descriptionId,\n    errorMessageId = _get.errorMessageId,\n    validationBehavior = _get.validationBehavior;\n  (0, $5jJ3f$useFormReset)(ref, state.selectedValue, state.setSelectedValue);\n  (0, $5jJ3f$useFormValidation)({\n    validationBehavior: validationBehavior\n  }, state, ref);\n  return {\n    labelProps: (0, $5jJ3f$mergeProps)(labelProps, {\n      onClick: function onClick(e) {\n        return e.preventDefault();\n      }\n    }),\n    inputProps: (0, $5jJ3f$mergeProps)(domProps, _objectSpread(_objectSpread({}, interactions), {}, {\n      type: 'radio',\n      name: name,\n      tabIndex: tabIndex,\n      disabled: isDisabled,\n      required: state.isRequired && validationBehavior === 'native',\n      checked: checked,\n      value: value,\n      onChange: onChange,\n      'aria-describedby': [props['aria-describedby'], state.isInvalid ? errorMessageId : null, descriptionId].filter(Boolean).join(' ') || undefined\n    })),\n    isDisabled: isDisabled,\n    isSelected: checked,\n    isPressed: isPressed || isLabelPressed\n  };\n}\nexport { $0d5c49892c1215da$export$37b0961d2f4751e2 as useRadio };","map":{"version":3,"names":["$0d5c49892c1215da$export$37b0961d2f4751e2","props","state","ref","value","children","ariaLabel","ariaLabelledby","isDisabled","hasChildren","hasAriaLabel","console","warn","checked","selectedValue","onChange","e","stopPropagation","setSelectedValue","_ref","$5jJ3f$usePress","pressProps","isPressed","_ref2","onPress","labelProps","isLabelPressed","_ref3","$5jJ3f$useFocusable","$5jJ3f$mergeProps","onFocus","setLastFocusedValue","focusableProps","interactions","domProps","$5jJ3f$filterDOMProps","labelable","tabIndex","lastFocusedValue","undefined","_get","$884aeceb3d67f00f$export$37b65e5b5444d35c","get","name","descriptionId","errorMessageId","validationBehavior","$5jJ3f$useFormReset","$5jJ3f$useFormValidation","onClick","preventDefault","inputProps","_objectSpread","type","disabled","required","isRequired","isInvalid","filter","Boolean","join","isSelected"],"sources":["C:\\Users\\merve\\node_modules\\@react-aria\\radio\\dist\\packages\\@react-aria\\radio\\src\\useRadio.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaRadioProps} from '@react-types/radio';\nimport {filterDOMProps, mergeProps, useFormReset} from '@react-aria/utils';\nimport {InputHTMLAttributes, LabelHTMLAttributes} from 'react';\nimport {radioGroupData} from './utils';\nimport {RadioGroupState} from '@react-stately/radio';\nimport {RefObject} from '@react-types/shared';\nimport {useFocusable} from '@react-aria/focus';\nimport {useFormValidation} from '@react-aria/form';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface RadioAria {\n  /** Props for the label wrapper element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the radio is disabled. */\n  isDisabled: boolean,\n  /** Whether the radio is currently selected. */\n  isSelected: boolean,\n  /** Whether the radio is in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for an individual\n * radio button in a radio group.\n * @param props - Props for the radio.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n * @param ref - Ref to the HTML input element.\n */\nexport function useRadio(props: AriaRadioProps, state: RadioGroupState, ref: RefObject<HTMLInputElement | null>): RadioAria {\n  let {\n    value,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  } = props;\n\n  const isDisabled = props.isDisabled || state.isDisabled;\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  let checked = state.selectedValue === value;\n\n  let onChange = (e) => {\n    e.stopPropagation();\n    state.setSelectedValue(value);\n  };\n\n  let {pressProps, isPressed} = usePress({\n    isDisabled\n  });\n\n  // iOS does not toggle radios if you drag off and back onto the label, so handle it ourselves.\n  let {pressProps: labelProps, isPressed: isLabelPressed} = usePress({\n    isDisabled,\n    onPress() {\n      state.setSelectedValue(value);\n    }\n  });\n\n  let {focusableProps} = useFocusable(mergeProps(props, {\n    onFocus: () => state.setLastFocusedValue(value)\n  }), ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n  let tabIndex: number | undefined = -1;\n  if (state.selectedValue != null) {\n    if (state.selectedValue === value) {\n      tabIndex = 0;\n    }\n  } else if (state.lastFocusedValue === value || state.lastFocusedValue == null) {\n    tabIndex = 0;\n  }\n  if (isDisabled) {\n    tabIndex = undefined;\n  }\n\n  let {name, descriptionId, errorMessageId, validationBehavior} = radioGroupData.get(state)!;\n  useFormReset(ref, state.selectedValue, state.setSelectedValue);\n  useFormValidation({validationBehavior}, state, ref);\n\n  return {\n    labelProps: mergeProps(labelProps, {onClick: e => e.preventDefault()}),\n    inputProps: mergeProps(domProps, {\n      ...interactions,\n      type: 'radio',\n      name,\n      tabIndex,\n      disabled: isDisabled,\n      required: state.isRequired && validationBehavior === 'native',\n      checked,\n      value,\n      onChange,\n      'aria-describedby': [\n        props['aria-describedby'],\n        state.isInvalid ? errorMessageId : null,\n        descriptionId\n      ].filter(Boolean).join(' ') || undefined\n    }),\n    isDisabled,\n    isSelected: checked,\n    isPressed: isPressed || isLabelPressed\n  };\n}\n"],"mappings":";;;;;;;;AA0CO,SAASA,0CAASC,KAAqB,EAAEC,KAAsB,EAAEC,GAAuC;EAC7G,IACEC,KAAK,GAIHH,KAAA,CALAG,KAAA;IAEFC,QAAQ,GAGNJ,KAAA,CAJGI,QAAA;IAESC,SAAS,GAErBL,KAAA,CAFF;IACmBM,cAAc,GAC/BN,KAAA,CADF;EAGF,IAAMO,UAAA,GAAaP,KAAA,CAAMO,UAAU,IAAIN,KAAA,CAAMM,UAAU;EAEvD,IAAIC,WAAA,GAAcJ,QAAA,IAAY;EAC9B,IAAIK,YAAA,GAAeJ,SAAA,IAAa,QAAQC,cAAA,IAAkB;EAC1D,IAAI,CAACE,WAAA,IAAe,CAACC,YAAA,EACnBC,OAAA,CAAQC,IAAI,CAAC;EAGf,IAAIC,OAAA,GAAUX,KAAA,CAAMY,aAAa,KAAKV,KAAA;EAEtC,IAAIW,QAAA,GAAW,SAAXA,SAAYC,CAAA;IACdA,CAAA,CAAEC,eAAe;IACjBf,KAAA,CAAMgB,gBAAgB,CAACd,KAAA;EACzB;EAEA,IAAAe,IAAA,GAA8B,IAAAC,eAAO,EAAE;kBACrCZ;IACF;IAFKa,UAAU,GAAAF,IAAA,CAAXE,UAAA;IAAaC,SAAS,GAAAH,IAAA,CAAXG,SAAA;EAKf,IAAAC,KAAA,GAA0D,IAAAH,eAAO,EAAE;kBACjEZ,UAAA;MACAgB,OAAA,WAAAA,QAAA;QACEtB,KAAA,CAAMgB,gBAAgB,CAACd,KAAA;MACzB;IACF;IALiBqB,UAAU,GAAAF,KAAA,CAAtBF,UAAA;IAAmCK,cAAc,GAAAH,KAAA,CAAzBD,SAAA;EAO7B,IAAAK,KAAA,GAAuB,IAAAC,mBAAW,EAAE,IAAAC,iBAAS,EAAE5B,KAAA,EAAO;MACpD6B,OAAA,EAAS,SAATA,QAAA;QAAA,OAAe5B,KAAA,CAAM6B,mBAAmB,CAAC3B,KAAA;MAAA;IAC3C,IAAID,GAAA;IAFC6B,cAAc,GAAAL,KAAA,CAAfK,cAAA;EAGJ,IAAIC,YAAA,GAAe,IAAAJ,iBAAS,EAAER,UAAA,EAAYW,cAAA;EAC1C,IAAIE,QAAA,GAAW,IAAAC,qBAAa,EAAElC,KAAA,EAAO;IAACmC,SAAA,EAAW;EAAI;EACrD,IAAIC,QAAA,GAA+B;EACnC,IAAInC,KAAA,CAAMY,aAAa,IAAI,MACzB;IAAA,IAAIZ,KAAA,CAAMY,aAAa,KAAKV,KAAA,EAC1BiC,QAAA,GAAW;EACb,OACK,IAAInC,KAAA,CAAMoC,gBAAgB,KAAKlC,KAAA,IAASF,KAAA,CAAMoC,gBAAgB,IAAI,MACvED,QAAA,GAAW;EAEb,IAAI7B,UAAA,EACF6B,QAAA,GAAWE,SAAA;EAGb,IAAAC,IAAA,GAAgE,IAAAC,yCAAa,EAAEC,GAAG,CAACxC,KAAA;IAA9EyC,IAAI,GAAAH,IAAA,CAALG,IAAA;IAAOC,aAAa,GAAAJ,IAAA,CAAfI,aAAA;IAAiBC,cAAc,GAAAL,IAAA,CAAhBK,cAAA;IAAkBC,kBAAkB,GAAAN,IAAA,CAApBM,kBAAA;EACxC,IAAAC,mBAAW,EAAE5C,GAAA,EAAKD,KAAA,CAAMY,aAAa,EAAEZ,KAAA,CAAMgB,gBAAgB;EAC7D,IAAA8B,wBAAgB,EAAE;wBAACF;EAAkB,GAAG5C,KAAA,EAAOC,GAAA;EAE/C,OAAO;IACLsB,UAAA,EAAY,IAAAI,iBAAS,EAAEJ,UAAA,EAAY;MAACwB,OAAA,EAAS,SAATA,QAASjC,CAAA;QAAA,OAAKA,CAAA,CAAEkC,cAAc;MAAA;IAAE;IACpEC,UAAA,EAAY,IAAAtB,iBAAS,EAAEK,QAAA,EAAAkB,aAAA,CAAAA,aAAA,KAClBnB,YAAY;MACfoB,IAAA,EAAM;YACNV,IAAA;gBACAN,QAAA;MACAiB,QAAA,EAAU9C,UAAA;MACV+C,QAAA,EAAUrD,KAAA,CAAMsD,UAAU,IAAIV,kBAAA,KAAuB;eACrDjC,OAAA;aACAT,KAAA;gBACAW,QAAA;MACA,oBAAoB,CAClBd,KAAK,CAAC,mBAAmB,EACzBC,KAAA,CAAMuD,SAAS,GAAGZ,cAAA,GAAiB,MACnCD,aAAA,CACD,CAACc,MAAM,CAACC,OAAA,EAASC,IAAI,CAAC,QAAQrB;IAAA,EACjC;gBACA/B,UAAA;IACAqD,UAAA,EAAYhD,OAAA;IACZS,SAAA,EAAWA,SAAA,IAAaI;EAC1B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}