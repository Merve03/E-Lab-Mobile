{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isDisabled\", \"onPress\", \"onPressStart\", \"onPressEnd\", \"onPressChange\"];\nimport { usePress } from '@react-native-aria/interactions';\nimport { mergeProps } from '@react-aria/utils';\nexport function useButton(props) {\n  var isDisabled = props.isDisabled,\n    onPress = props.onPress,\n    onPressStart = props.onPressStart,\n    onPressEnd = props.onPressEnd,\n    onPressChange = props.onPressChange,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _usePress = usePress({\n      onPressStart: onPressStart,\n      onPressEnd: onPressEnd,\n      onPressChange: onPressChange,\n      onPress: onPress,\n      isDisabled: isDisabled\n    }),\n    pressProps = _usePress.pressProps,\n    isPressed = _usePress.isPressed;\n  var mergedProps = mergeProps(pressProps, rest, {\n    'aria-disabled': isDisabled,\n    'role': 'button',\n    'disabled': isDisabled\n  });\n  return {\n    isPressed: isPressed,\n    buttonProps: mergedProps\n  };\n}","map":{"version":3,"names":["usePress","mergeProps","useButton","props","isDisabled","onPress","onPressStart","onPressEnd","onPressChange","rest","_objectWithoutProperties","_excluded","_usePress","pressProps","isPressed","mergedProps","buttonProps"],"sources":["C:\\Users\\merve\\node_modules\\@react-native-aria\\button\\src\\useButton.ts"],"sourcesContent":["import { ReactNode } from 'react';\nimport { PressEvents, usePress } from '@react-native-aria/interactions';\nimport { AccessibilityProps, PressableProps } from 'react-native';\nimport { mergeProps } from '@react-aria/utils';\n\ninterface ButtonProps extends PressEvents {\n  /** Whether the button is disabled. */\n  isDisabled?: boolean;\n  /** The content to display in the button. */\n  children?: ReactNode;\n}\n\nexport interface RNAriaButtonProps extends AccessibilityProps, ButtonProps {}\n\nexport interface ButtonAria {\n  /** Props for the button element. */\n  buttonProps: PressableProps;\n  /** Whether the button is currently pressed. */\n  isPressed: boolean;\n}\n\nexport function useButton(props: RNAriaButtonProps): ButtonAria {\n  let {\n    isDisabled,\n    // @ts-ignore\n    onPress,\n    // @ts-ignore\n    onPressStart,\n    // @ts-ignore\n    onPressEnd,\n    // @ts-ignore\n    onPressChange,\n    ...rest\n  } = props;\n\n  let { pressProps, isPressed } = usePress({\n    onPressStart,\n    onPressEnd,\n    onPressChange,\n    onPress,\n    isDisabled,\n  });\n\n  const mergedProps = mergeProps(pressProps, rest, {\n    'aria-disabled': isDisabled,\n    'role': 'button',\n    'disabled': isDisabled,\n  });\n\n  return {\n    isPressed,\n    buttonProps: mergedProps,\n  };\n}\n"],"mappings":";;AACA,SAAsBA,QAAQ,QAAQ,iCAAiC;AAEvE,SAASC,UAAU,QAAQ,mBAAmB;AAkB9C,OAAO,SAASC,SAASA,CAACC,KAAwB,EAAc;EAC9D,IACEC,UAAU,GAURD,KAAK,CAVPC,UAAU;IAEVC,OAAO,GAQLF,KAAK,CARPE,OAAO;IAEPC,YAAY,GAMVH,KAAK,CANPG,YAAY;IAEZC,UAAU,GAIRJ,KAAK,CAJPI,UAAU;IAEVC,aAAa,GAEXL,KAAK,CAFPK,aAAa;IACVC,IAAA,GAAAC,wBAAA,CACDP,KAAK,EAAAQ,SAAA;EAET,IAAAC,SAAA,GAAgCZ,QAAQ,CAAC;MACvCM,YAAY,EAAZA,YAAY;MACZC,UAAU,EAAVA,UAAU;MACVC,aAAa,EAAbA,aAAa;MACbH,OAAO,EAAPA,OAAO;MACPD,UAAA,EAAAA;IACF,CAAC,CAAC;IANIS,UAAU,GAAAD,SAAA,CAAVC,UAAU;IAAEC,SAAA,GAAAF,SAAA,CAAAE,SAAA;EAQlB,IAAMC,WAAW,GAAGd,UAAU,CAACY,UAAU,EAAEJ,IAAI,EAAE;IAC/C,eAAe,EAAEL,UAAU;IAC3B,MAAM,EAAE,QAAQ;IAChB,UAAU,EAAEA;EACd,CAAC,CAAC;EAEF,OAAO;IACLU,SAAS,EAATA,SAAS;IACTE,WAAW,EAAED;EACf,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}